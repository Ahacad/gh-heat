name: Release

on:
  push:
    tags:
      - 'v*'

# Add these permissions to allow release creation
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
            
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Prepare assets (Unix)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf gh-heat-${{ matrix.name }}.tar.gz gh-heat
          
      - name: Prepare assets (Windows)
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          7z a gh-heat-${{ matrix.name }}.zip gh-heat.exe
          
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/gh-heat-${{ matrix.name }}.tar.gz
            target/${{ matrix.target }}/release/gh-heat-${{ matrix.name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
